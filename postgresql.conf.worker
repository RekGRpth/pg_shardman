# We use logical replication for data replication.
wal_level = logical # necessary for logical replication
# On worker node from replication group with n nodes, 'max_replication_slots'
# must be at least 2n + 1 (+ 1 for moving parts/replicas)
max_replication_slots = 101
# On worker node from replication group with n nodes, 'max_replication_slots'
# must be at least n + 1
max_wal_senders = 51
# On worker node from replication group with n nodes, 'max_replication_slots'
# must be at least n + 1
max_logical_replication_workers = 51
# At least max_logical_replication_workers + 1
max_worker_processes = 60
# Logical worker dies if it hadn't receive anything new during
# wal_receiver_timeout
wal_receiver_timeout = 60s

# set this to 'on' on for synchronous replication between shards and their
# replicas, otherwise to 'local'.
synchronous_commit = on

# for 2pc
max_prepared_transactions = 1000

# global snapshots
track_global_snapshots = on
global_snapshot_defer_time = 30
postgres_fdw.use_global_snapshots = on

# only for testing performance; setting this to 'off' violates visibility
postgres_fdw.use_repeatable_read = on

# This node is shardlord?
shardman.shardlord = off
