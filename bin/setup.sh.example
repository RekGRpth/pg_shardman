pgpath=~/postgres/install/vanilla/
logfile=/tmp/shmn.log

lord_datadir=/tmp/data1
lord_port=5432

# declare -a worker_datadirs=()
# declare -a worker_ports=()

# declare -a worker_datadirs=("${HOME}/postgres/data2")
# declare -a worker_ports=("5433")

# declare -a worker_datadirs=("${HOME}/postgres/data2" "${HOME}/postgres/data3")
# declare -a worker_ports=("5433" "5434")

# declare -a worker_datadirs=("${HOME}/postgres/data2" "${HOME}/postgres/data3" "${HOME}/postgres/data4")
# declare -a worker_ports=("5433" "5434" "5435")

declare -a worker_datadirs=("/tmp/data2" "/tmp/data3" "/tmp/data4" "/tmp/data5")
declare -a worker_ports=("5433" "5434" "5435" "5436")

function run_demo()
{
    :
    psql -c "drop table if exists t cascade;"
    psql -c "CREATE TABLE t(i int);"

    psql -c "drop table if exists pt cascade;"
    psql -c "CREATE TABLE pt(id INT primary key, payload REAL);"
    psql -c "INSERT INTO pt SELECT generate_series(1, 10), random();"

    # declarative partitioning
    # psql -p 5433 -c "drop table if exists ppt cascade;"
    # psql -p 5433 -c "CREATE TABLE ppt(id INT primary key, payload REAL);"
    # psql -c "create server node_1 foreign data wrapper postgres_fdw options (port '5433');"
    # psql -c "create user mapping for current_user server node_1;"
    # psql -c "create foreign table ppt (id int, payload real) server node_1;"

    # psql -c "create table ppt_root (id int, payload real) partition by range (id);"
    # psql -c "alter table ppt_root attach partition ppt for values from (MINVALUE) TO (MAXVALUE);"

    # with joe
    # for port in "${worker_ports[@]}" $lord_port; do
	# psql -p $port -c "set synchronous_commit to local; drop role if exists joe; create role joe superuser login; grant usage on FOREIGN DATA WRAPPER postgres_fdw to joe;"
    # done
    # psql -c "select shardman.add_node('port=5433', conn_string => 'user=joe password=12345 dbname=ars port=5433');"
    # psql -c "select shardman.add_node('port=5434', conn_string => 'user=joe password=12345 dbname=ars port=5434');"
    # psql -c "select shardman.add_node('port=5435', conn_string => 'user=joe password=12345 dbname=ars port=5435');"
    # psql -c "select shardman.add_node('port=5436', conn_string => 'user=joe password=12345 dbname=ars port=5436');"

    psql -c "select shardman.add_node('port=5433');"
    psql -c "select shardman.add_node('port=5434');"
    psql -c "select shardman.add_node('port=5435');"
    psql -c "select shardman.add_node('port=5436');"

    psql -c "select shardman.hash_shard_table('pt', 'id', 4);"
    psql -c "select shardman.set_redundancy('pt', 2);"

    # for port in "${worker_ports[@]}"; do
    	# psql -p $port -f /home/ars/postgres/pg_shardman/bin/pgbench_history.sql
    # done
    # psql -f devops/pgbench_ddl.sql
    # psql -c "select shardman.hash_shard_table('pgbench_accounts', 'aid', 30, 1);"
    # psql -c "select shardman.hash_shard_table('pgbench_tellers', 'tid', 30, 1);"
    # psql -c "select shardman.hash_shard_table('pgbench_branches', 'bid', 30, 1);"
    # pgbench -p 5433 -s 10 -i --no-ddl
}
