### create pgbench_history everywhere, create pgbench tables,
# shard them.
# Controlling vars: scale, nparts, redundancy, use_pgbouncer, pgbouncer_pool_mode,
# nodes_in_repgroup

- import_playbook: init.yml
  tags:
    - init

- hosts: workers
  environment:
    PATH: "{{ pg_dst }}/bin:{{ ansible_env.PATH }}"

  tasks:
  - name: recreate pgbench_history on workers, drop other pgbench tables
    command: >
      psql -p {{ pg_port }} -c "drop table if exists pgbench_history;
      do $$
      declare
      rname text;
      begin
      for rname in (select relname from pg_class where relname ~ 'pgbench_.*' and relkind = 'r') loop
      execute format('drop table if exists %I cascade', rname);
      end loop;
      end
      $$ LANGUAGE 'plpgsql';
      drop table if exists pgbench_accounts cascade;
      drop table if exists pgbench_tellers cascade;
      drop table if exists pgbench_branches cascade;
      create table pgbench_history (tid int, bid int, aid int,
      delta int, mtime timestamp, filler char(22));"
    tags:
      - pgbench_history

- hosts: shardlord
  vars:
    nparts: 10
    redundancy: 0
  environment:
    PATH: "{{ pg_dst }}/bin:{{ ansible_env.PATH }}"

  tasks:
  - name: copy pgbench_ddl.sql
    copy:
      src: pgbench_ddl.sql
      dest: "/home/{{ ansible_user }}/pgbench_ddl.sql"

  - name: create pgbench tables on shardlord
    command: >
      psql -p {{ pg_port }} -f pgbench_ddl.sql

  - name: create_hash_partitions for pgbench_accounts, nparts {{ nparts }}, redundancy {{ redundancy }}
    command: >
      psql -p {{ pg_port }} -c "
      select shardman.create_hash_partitions('pgbench_accounts', 'aid', {{ nparts }}, {{ redundancy }});
      select shardman.create_hash_partitions('pgbench_tellers', 'tid', {{ nparts }}, {{ redundancy }});
      select shardman.create_hash_partitions('pgbench_branches', 'bid', {{ nparts }}, {{ redundancy }});
      "
    tags:
      - create_hash_partitions

- hosts: init_node
  vars:
    scale: 10
    nparts: 10
    redundancy: 0
    rebalance: true
  environment:
    PATH: "{{ pg_dst }}/bin:{{ ansible_env.PATH }}"

  tasks:
    # requires patched pgbench to avoid truncate
  - name: initialize pgbench, scale {{ scale }}
    command: >
      pgbench -p {{ pg_port }} -s {{ scale }} -i --init-steps=gv
    tags:
      - pgbench_init
